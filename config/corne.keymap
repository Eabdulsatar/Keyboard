/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

#include "zmk-helpers/key-labels/36.h"                                      // Source key-labels.
#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // Left-hand keys.
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // Right-hand keys.
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2   

/* Left-hand HRMs. */
ZMK_HOLD_TAP(hml,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
    hold-trigger-on-release;
)

/* Right-hand HRMs. */
ZMK_HOLD_TAP(hmr,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
    hold-trigger-on-release;
)

/ {
    behaviors {
        rgb_ug: rgb_ug {
            compatible = "zmk,behavior-rgb-underglow";
            #binding-cells = <2>;
        };
    };

    layer_indicator {
        compatible = "zmk,layer-indicator";
        layer-colors = <
            RGB_COLOR_HSV(0, 0, 0)      // Default layer (off)
            RGB_COLOR_HSV(0, 100, 100)  // Lower layer (red)
            RGB_COLOR_HSV(120, 100, 50) // Raise layer (green)
            RGB_COLOR_HSV(240, 100, 50) // Layer 3 (blue)
        >;
    };

    combos {
        compatible = "zmk,combos";

        left_bkt {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <4 3>;
            timeout-ms = <50>;
        };

        right_bkt {
            bindings = <&kp RBKT>;
            key-positions = <7 8>;
            timeout-ms = <50>;
        };

        left_par {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <15 16>;
            timeout-ms = <50>;
        };

        right_par {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <19 20>;
            timeout-ms = <50>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <27 28>;
            timeout-ms = <50>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <32 31>;
            timeout-ms = <50>;
        };

        bac {
            bindings = <&kp BACKSLASH>;
            key-positions = <5 6>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <17 18>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB           &kp Q           &kp W  &kp E             &kp R      &kp T        &kp Y      &kp U         &kp I          &kp O    &kp P          &kp ESCAPE
&kp LEFT_SHIFT    &mt LEFT_GUI A  &kp S  &kp D             &kp F      &kp G        &kp H      &kp J         &kp K          &kp L    &kp SEMICOLON  &kp SQT
&kp LEFT_CONTROL  &kp Z           &kp X  &kp C             &kp V      &kp B        &kp N      &kp M         &kp COMMA      &kp DOT  &kp FSLH       &kp RA(W)
                                         &kp LEFT_COMMAND  &lt 1 DEL  &lt 2 SPACE  &lt 3 RET  &kp LEFT_ALT  &kp BACKSPACE
            >;
        };

        lower_layer {
            bindings = <
&kp SQT            &kp N1  &kp N2  &kp N3  &kp N4  &kp N5   &kp N6  &kp N7           &kp N8            &kp N9          &kp N0           &kp MINUS
&kp LEFT_SHIFT     &trans  &trans  &trans  &none   &kp F12  &none   &none            &kp LEFT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp EQUAL
&ext_power EP_TOG  &none   &none   &none   &none   &none    &none   &none            &none             &kp APOS        &kp TILDE        &none
                                   &none   &none   &none    &none   &kp RIGHT_SHIFT  &none
            >;
        };

        raise_layer {
            bindings = <
&trans          &kp APOS       &kp EXCLAMATION  &kp AT_SIGN           &kp DOLLAR             &kp PERCENT  &kp HOME        &mkp LCLK       &mkp RCLK     &kp END          &trans  &trans
&kp LEFT_SHIFT  &kp AMPERSAND  &kp ASTERISK     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans  &trans
&trans          &kp DELETE     &kp KP_NUMBER_1  &kp KP_NUMBER_2       &kp KP_NUMBER_3        &kp PLUS     &trans          &trans          &trans        &trans           &trans  &trans
                                                &trans                &trans                 &trans       &trans          &trans          &trans
            >;
        };

        layer_3 {
            bindings = <
&out OUT_TOG  &kp F1      &kp F2             &kp F3           &kp F4            &kp F5  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&bt BT_PRV    &bt BT_NXT  &rgb_ug RGB_EFF    &rgb_ug RGB_TOG  &trans            &trans  &trans  &trans  &trans  &trans   &trans   &trans
&trans        &trans      &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_PLAY_PAUSE  &trans  &trans  &trans  &trans  &trans   &trans   &trans
                                             &trans           &trans            &trans  &trans  &trans  &trans
            >;
        };

        extra1 { status = "reserved"; };

        extra2 { status = "reserved"; };

        extra3 { status = "reserved"; };

        extra4 { status = "reserved"; };
    };
};
