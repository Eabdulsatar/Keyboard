/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    combos {
        compatible = "zmk,combos";

        left_bkt {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <4 3>;
            timeout-ms = <50>;
        };

        right_bkt {
            bindings = <&kp RBKT>;
            key-positions = <7 8>;
            timeout-ms = <50>;
        };

        left_par {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <15 16>;
            timeout-ms = <50>;
        };

        right_par {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <19 20>;
            timeout-ms = <50>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <27 28>;
            timeout-ms = <50>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <32 31>;
            timeout-ms = <50>;
        };

        bac {
            bindings = <&kp BACKSLASH>;
            key-positions = <5 6>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <17 18>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESCAPE        &kp Q  &kp W  &kp E             &kp R        &kp T        &kp Y  &kp U         &kp I          &kp O    &kp P          &kp BSPC
&kp LEFT_SHIFT    &kp A  &kp S  &kp D             &kp F        &kp G        &kp H  &kp J         &kp K          &kp L    &kp SEMICOLON  &kp SQT
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C             &kp V        &kp B        &kp N  &kp M         &kp COMMA      &kp DOT  &kp FSLH       &kp ESC
                                &kp LEFT_COMMAND  &lt 1 ENTER  &lt 2 SPACE  &mo 3  &kp LEFT_ALT  &kp BACKSPACE
            >;
        };

        lower_layer {
            bindings = <
&kp TAB            &kp N1           &kp N2  &kp N3  &kp N4  &kp N5   &kp N6     &kp N7           &kp N8     &kp N9  &kp N0   &kp BSPC
&bootloader        &rgb_ug RGB_TOG  &trans  &trans  &trans  &kp F12  &kp MINUS  &kp EQUAL        &kp GRAVE  &trans  &kp SQT  &trans
&ext_power EP_TOG  &trans           &trans  &trans  &trans  &trans   &trans     &trans           &trans     &trans  &trans   &trans
                                            &trans  &trans  &trans   &trans     &kp RIGHT_SHIFT  &trans
            >;
        };

        raise_layer {
            bindings = <
&trans  &kp ESC     &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMBER_0  &kp HOME  &trans    &kp UP    &trans     &trans  &trans
&trans  &kp CAPS    &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp AT           &kp END   &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
&trans  &kp DELETE  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp DOT          &trans    &trans    &trans    &trans     &trans  &trans
                                     &trans           &trans           &trans           &trans    &trans    &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &kp F1      &kp F2  &kp F3  &kp F4  &kp F5  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &bt BT_CLR  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans   &trans   &trans
                            &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        extra1 { status = "reserved"; };

        extra2 { status = "reserved"; };

        extra3 { status = "reserved"; };

        extra4 { status = "reserved"; };
    };
};
